name: Deploy BIM to Fabric

on:
  push:
    branches:
      - main
    paths:
      - 'DND - new copy.bim'  # Runs only when this file changes
  workflow_dispatch:  # Allows manual trigger from GitHub Actions

jobs:
  deploy_bim:
    runs-on: windows-latest  # Required for PowerShell deployment
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Power BI Cmdlets
        run: |
          Install-Module -Name MicrosoftPowerBIMgmt -Force -Scope CurrentUser
          Install-Module -Name SqlServer -Force -Scope CurrentUser -AllowClobber

      - name: Deploy BIM to Fabric
        run: |
          $ClientId = "cbc0c5f3-0578-4fc8-9be8-43392c766f61"
          $ClientSecret = "ErN8Q~r6i-WYqsUi-uwOIWg.OJmSax-mGciv1cQi"
          $TenantId = "e4d98dd2-9199-42e5-ba8b-da3e763ede2e"
          $WorkspaceName = "Tungsten Automation"
          $XmlaEndpoint = "powerbi://api.powerbi.com/v1.0/myorg/Tungsten Automation"

          $SecurePassword = ConvertTo-SecureString -String $ClientSecret -AsPlainText -Force
          $Credential = New-Object System.Management.Automation.PSCredential($ClientId, $SecurePassword)

          # Authenticate to Power BI Service
          Connect-AzAccount -ServicePrincipal -Tenant $TenantId -Credential $Credential
          
          # Deploy BIM using Invoke-ASCmd
          $BimFileContent = Get-Content -Raw -Path "DND - new copy.bim"
          $Command = @"
          {
            "createOrReplace": {
              "object": {
                "database": "DND - new copy"
              },
              "json": $BimFileContent
            }
          }
          "@

          Invoke-ASCmd -Server $XmlaEndpoint -Query $Command
